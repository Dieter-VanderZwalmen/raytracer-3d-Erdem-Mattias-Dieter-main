def scene_at(now)
{                                    
   	var material_red = Materials.uniform( [ "ambient": Colors.red() * 0.1,
                                    	"diffuse": Colors.red() * 0.8,
                                        "specular": Colors.white() * 0.3,
                                        "specular_exponent": 10,
										"translucency": 0.9
                                        ] )
  	var material_green = Materials.uniform( [ "ambient": Colors.green() * 0.1,
                                    	"diffuse": Colors.green() * 0.8,
                                        "specular": Colors.white() * 0.3,
                                        "specular_exponent": 10,
                                        "translucency": 0.9
                                        ] )
    var material_yellow = Materials.uniform( [ "ambient": Colors.yellow() * 0.1,
                                    	"diffuse": Colors.yellow() * 0.8,
                                        "specular": Colors.white() * 0.3,
                                        "specular_exponent": 10,
                                        "translucency": 0.9
                                        ] )
    var material_blue = Materials.uniform( [ "ambient": Colors.blue() * 0.1,
                                    	"diffuse": Colors.green() * 0.8,
                                        "specular": Colors.white() * 0.3,
                                        "specular_exponent": 10,
                                        "translucency": 0.9
                                        ] )
    var back_wall_material = Materials.uniform( [ 	"ambient": Colors.black() * 0.1,
                                                	"diffuse": Colors.black() * 0.8 ] )
	var primitives = []
    primitives.push_back( translate(vec(0, 0, -1.5), decorate(material_red, sphere())) )
    primitives.push_back( translate(vec(0, 0, 1.5), decorate(material_green, sphere())) )
    primitives.push_back( translate(vec(0, 0, -4.5), decorate(material_yellow, sphere())) )
    primitives.push_back( translate(vec(0, 0, 4.5), decorate(material_blue, sphere())) )
    primitives.push_back( translate(vec(0,0,-10), decorate(back_wall_material, xy_plane())) )
	var root = union(primitives)
    var lights = [Lights.omnidirectional( pos(0,5,0), Colors.white() ),
    Lights.omnidirectional( pos(0,-5,0), Colors.white() )
    ]
    
    var x = Animations.animate(-5, 5, seconds(3))
    var camera = Cameras.perspective( [ "eye": pos(x[now], 0, 10),
                                        "look_at": pos(0,0,0) ] )

    create_scene(camera, root, lights)
}

var raytracer = Raytracers.v7()

var renderer = Renderers.standard( [ "width": 500,
                                     "height": 500,
                                     "sampler": Samplers.random(4),
                                     "ray_tracer": raytracer ] )

pipeline( scene_animation(scene_at, seconds(5)),
          [ Pipeline.animation(30),
            Pipeline.renderer(renderer),
            Pipeline.wif(),
            Pipeline.base64(),
            Pipeline.stdout() ] )