def scene_at(now)
{                                 
    var material_blue = Materials.uniform( [ "ambient": Colors.blue() * 0.1,
                                    	"diffuse": Colors.blue() * 0.8,
                                    	"transparency": 0.7,
                                    	"refractive_index": 4
                                        ] )
   	var floor_material = Materials.uniform( [ "ambient": Colors.white() * 0.1,
                                            "diffuse": Colors.white() * 0.8,
                                            "reflectivity": 0.5 ] )

  	var left_wall_material = Materials.uniform( [ "ambient": Colors.red() * 0.1,
                                                "diffuse": Colors.red() * 0.8 ] )

  	var right_wall_material = Materials.uniform( [ "ambient": Colors.green() * 0.1,
                                                 "diffuse": Colors.green() * 0.8 ] )
    
    var back_wall_material = Materials.uniform( [ 	"ambient": Colors.blue() * 0.1,
                                                	"diffuse": Colors.blue() * 0.8 ] )
    var ceiling_material = floor_material
	var primitives = []
    
    var y = Animations.animate(-3, 3, seconds(5))
    primitives.push_back( translate(vec(y[now], 0, 0), decorate(material_blue, sphere())) )   
  	primitives.push_back( translate(vec(0,-5,0), decorate(floor_material, xz_plane())) )
  	primitives.push_back( translate(vec(0,5,0), decorate(ceiling_material, xz_plane())) )
  	primitives.push_back( translate(vec(-5,0,0), decorate(left_wall_material, yz_plane())) )
  	primitives.push_back( translate(vec(5,0,0), decorate(right_wall_material, yz_plane())) )
    primitives.push_back( translate(vec(0,0,-5), decorate(back_wall_material, xy_plane())) )
	var root = union(primitives)
    var lights = [Lights.omnidirectional( pos(0, 4.9, 0), Colors.white() )]
    
    var camera = Cameras.perspective( [ "eye": pos(0, 0, 12),
                                        "look_at": pos(0,0,0) ] )

    create_scene(camera, root, lights)
}

var raytracer = Raytracers.v8()

var renderer = Renderers.standard( [ "width": 500,
                                     "height": 500,
                                     "sampler": Samplers.single(),
                                     "ray_tracer": raytracer ] )

pipeline( scene_animation(scene_at, seconds(5)),
          [ Pipeline.animation(30),
            Pipeline.renderer(renderer),
            Pipeline.wif(),
            Pipeline.base64(),
            Pipeline.stdout() ] )